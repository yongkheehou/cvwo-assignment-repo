{"ast":null,"code":"var _jsxFileName = \"/Users/kheehouyong/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/side_projects/CVWO/cvwo/frontend/src/components/navBar/LanguageSelect.tsx\";\nimport * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LanguageSelect() {\n  const options = languageList.map(option => {\n    const firstLetter = option.toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      title: option\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    id: \"grouped-demo\",\n    options: options.sort((a, b) => -b.firstLetter.localeCompare(a.firstLetter)),\n    getOptionLabel: option => option.title,\n    selectOnFocus: true,\n    clearOnBlur: true,\n    sx: {\n      width: 150,\n      mr: 4\n    },\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: \"Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = LanguageSelect;\nconst languageList = ['English', 'Mandarin'];\nvar _c;\n$RefreshReg$(_c, \"LanguageSelect\");","map":{"version":3,"names":["React","TextField","Autocomplete","jsxDEV","_jsxDEV","LanguageSelect","options","languageList","map","option","firstLetter","toUpperCase","test","title","id","sort","a","b","localeCompare","getOptionLabel","selectOnFocus","clearOnBlur","sx","width","mr","renderInput","params","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kheehouyong/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/side_projects/CVWO/cvwo/frontend/src/components/navBar/LanguageSelect.tsx"],"sourcesContent":["import * as React from 'react';\nimport TextField from '@mui/material/TextField';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nexport default function LanguageSelect() {\n  const options = languageList.map((option) => {\n    const firstLetter = option.toUpperCase();\n    return {\n      firstLetter: /[0-9]/.test(firstLetter) ? '0-9' : firstLetter,\n      title: option,\n    };\n  });\n\n  return (\n    <Autocomplete\n      id=\"grouped-demo\"\n      options={options.sort(\n        (a, b) => -b.firstLetter.localeCompare(a.firstLetter),\n      )}\n      getOptionLabel={(option) => option.title}\n      selectOnFocus\n      clearOnBlur\n      sx={{ width: 150, mr: 4 }}\n      renderInput={(params) => <TextField {...params} label=\"Language\" />}\n    />\n  );\n}\n\nconst languageList = ['English', 'Mandarin'];\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,YAAY,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,eAAe,SAASC,cAAcA,CAAA,EAAG;EACvC,MAAMC,OAAO,GAAGC,YAAY,CAACC,GAAG,CAAEC,MAAM,IAAK;IAC3C,MAAMC,WAAW,GAAGD,MAAM,CAACE,WAAW,CAAC,CAAC;IACxC,OAAO;MACLD,WAAW,EAAE,OAAO,CAACE,IAAI,CAACF,WAAW,CAAC,GAAG,KAAK,GAAGA,WAAW;MAC5DG,KAAK,EAAEJ;IACT,CAAC;EACH,CAAC,CAAC;EAEF,oBACEL,OAAA,CAACF,YAAY;IACXY,EAAE,EAAC,cAAc;IACjBR,OAAO,EAAEA,OAAO,CAACS,IAAI,CACnB,CAACC,CAAC,EAAEC,CAAC,KAAK,CAACA,CAAC,CAACP,WAAW,CAACQ,aAAa,CAACF,CAAC,CAACN,WAAW,CACtD,CAAE;IACFS,cAAc,EAAGV,MAAM,IAAKA,MAAM,CAACI,KAAM;IACzCO,aAAa;IACbC,WAAW;IACXC,EAAE,EAAE;MAAEC,KAAK,EAAE,GAAG;MAAEC,EAAE,EAAE;IAAE,CAAE;IAC1BC,WAAW,EAAGC,MAAM,iBAAKtB,OAAA,CAACH,SAAS;MAAA,GAAKyB,MAAM;MAAEC,KAAK,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEN;AAACC,EAAA,GAtBuB3B,cAAc;AAwBtC,MAAME,YAAY,GAAG,CAAC,SAAS,EAAE,UAAU,CAAC;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}