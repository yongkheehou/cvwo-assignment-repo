{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { apiSlice } from './api/apiSlice';\nimport authReducer from './features/auth/authSlice';\nexport const store = configureStore({\n  reducer: {\n    [apiSlice.reducerPath]: apiSlice.reducer,\n    auth: authReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(apiSlice.middleware),\n  devTools: true // set to false for production\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\n\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}","map":{"version":3,"names":["configureStore","apiSlice","authReducer","store","reducer","reducerPath","auth","middleware","getDefaultMiddleware","concat","devTools"],"sources":["/Users/kheehouyong/Library/CloudStorage/OneDrive-NationalUniversityofSingapore/side_projects/CVWO/cvwo/frontend/src/store.tsx"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { apiSlice } from './api/apiSlice';\nimport authReducer from './features/auth/authSlice';\n\nexport const store = configureStore({\n  reducer: {\n    [apiSlice.reducerPath]: apiSlice.reducer,\n    auth: authReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(apiSlice.middleware),\n  devTools: true, // set to false for production\n});\n\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,SAASC,QAAQ,QAAQ,gBAAgB;AACzC,OAAOC,WAAW,MAAM,2BAA2B;AAEnD,OAAO,MAAMC,KAAK,GAAGH,cAAc,CAAC;EAClCI,OAAO,EAAE;IACP,CAACH,QAAQ,CAACI,WAAW,GAAGJ,QAAQ,CAACG,OAAO;IACxCE,IAAI,EAAEJ;EACR,CAAC;EACDK,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACR,QAAQ,CAACM,UAAU,CAAC;EACpDG,QAAQ,EAAE,IAAI,CAAE;AAClB,CAAC,CAAC;;AAEF;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}